{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\n// @ is an alias to /src\nimport EventCard from \"@/components/EventCard.vue\";\nimport EventService from \"@/services/EventService.js\";\nimport { watchEffect } from \"@vue/runtime-core\";\nexport default {\n  name: \"EventListView\",\n  props: {\n    page: {\n      type: Number,\n      required: true\n    },\n    morepage: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    EventCard: EventCard\n  },\n  data: function data() {\n    return {\n      events: null,\n      totalEvents: 0 // <--- Added this to store totalEvents\n\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    watchEffect(function () {\n      EventService.getEvents(_this.morepage, _this.page).then(function (response) {\n        _this.events = response.data;\n        _this.totalEvents = response.headers[\"x-total-count\"]; // <--- Store it\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    });\n  },\n  computed: {\n    hasNextPage: function hasNextPage() {\n      //First, calculate total pages\n      var totalPages = Math.ceil(this.totalEvents / 2); // 2 is events per pages.\n      //Then check to see if the current page is less than the total pages.\n\n      return this.page < totalPages;\n    }\n  },\n\n  /* eslint-disable-next-line no-unused-vars */\n  beforeRouteEnter: function beforeRouteEnter(routeTo, routeFrom, next) {\n    EventService.getEvents(3, parseInt(routeTo.query.page) || 1).then(function (response) {\n      next(function (comp) {\n        comp.events = response.data;\n        comp.totalEvents = response.headers[\"x-total-count\"];\n      });\n    })[\"catch\"](function () {\n      next({\n        name: \"NetworkError\"\n      });\n    });\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(routeTo, routeFrom, next) {\n    var _this2 = this;\n\n    EventService.getEvents(3, parseInt(routeTo.query.page) || 1).then(function (response) {\n      _this2.events = response.data;\n      _this2.totalEvents = response.headers[\"x-total-count\"];\n      next();\n    })[\"catch\"](function () {\n      next({\n        name: \"NetworkError\"\n      });\n    });\n  }\n};","map":{"version":3,"mappings":";;AAkCA;AACA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,eAAe;EACbC,IAAI,EAAE,eADO;EAEbC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN,CADD;IAKLC,QAAQ,EAAE;MACRH,IAAI,EAAEC,MADE;MAERC,QAAQ,EAAE;IAFF;EALL,CAFM;EAYbE,UAAU,EAAE;IACVV,SAAS,EAATA;EADU,CAZC;EAebW,IAfa,kBAeN;IACL,OAAO;MACLC,MAAM,EAAE,IADH;MAELC,WAAW,EAAE,CAFR,CAEW;;IAFX,CAAP;EAID,CApBY;EAqBbC,OArBa,qBAqBH;IAAA;;IACRZ,WAAW,CAAC,YAAM;MAChBD,YAAY,CAACc,SAAb,CAAuB,KAAI,CAACN,QAA5B,EAAsC,KAAI,CAACJ,IAA3C,EACGW,IADH,CACQ,UAACC,QAAD,EAAc;QAClB,KAAI,CAACL,MAAL,GAAcK,QAAQ,CAACN,IAAvB;QACA,KAAI,CAACE,WAAL,GAAmBI,QAAQ,CAACC,OAAT,CAAiB,eAAjB,CAAnB,CAFkB,CAEoC;MACvD,CAJH,WAKS,UAACC,KAAD,EAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAPH;IAQD,CATU,CAAX;EAUD,CAhCY;EAiCbG,QAAQ,EAAE;IACRC,WADQ,yBACM;MACZ;MACA,IAAIC,UAAS,GAAIC,IAAI,CAACC,IAAL,CAAU,KAAKb,WAAL,GAAmB,CAA7B,CAAjB,CAFY,CAEsC;MAElD;;MACA,OAAO,KAAKR,IAAL,GAAYmB,UAAnB;IACD;EAPO,CAjCG;;EA0Cb;EACAG,gBA3Ca,4BA2CIC,OA3CJ,EA2CaC,SA3Cb,EA2CwBC,IA3CxB,EA2C8B;IACzC7B,YAAY,CAACc,SAAb,CAAuB,CAAvB,EAA0BgB,QAAQ,CAACH,OAAO,CAACI,KAAR,CAAc3B,IAAf,CAAR,IAAgC,CAA1D,EACGW,IADH,CACQ,UAACC,QAAD,EAAc;MAClBa,IAAI,CAAC,UAACG,IAAD,EAAU;QACbA,IAAI,CAACrB,MAAL,GAAcK,QAAQ,CAACN,IAAvB;QACAsB,IAAI,CAACpB,WAAL,GAAmBI,QAAQ,CAACC,OAAT,CAAiB,eAAjB,CAAnB;MACD,CAHG,CAAJ;IAID,CANH,WAOS,YAAM;MACXY,IAAI,CAAC;QAAE3B,IAAI,EAAE;MAAR,CAAD,CAAJ;IACD,CATH;EAUD,CAtDY;EAuDb+B,iBAvDa,6BAuDKN,OAvDL,EAuDcC,SAvDd,EAuDyBC,IAvDzB,EAuD+B;IAAA;;IAC1C7B,YAAY,CAACc,SAAb,CAAuB,CAAvB,EAA0BgB,QAAQ,CAACH,OAAO,CAACI,KAAR,CAAc3B,IAAf,CAAR,IAAgC,CAA1D,EACGW,IADH,CACQ,UAACC,QAAD,EAAc;MAClB,MAAI,CAACL,MAAL,GAAcK,QAAQ,CAACN,IAAvB;MACA,MAAI,CAACE,WAAL,GAAmBI,QAAQ,CAACC,OAAT,CAAiB,eAAjB,CAAnB;MACAY,IAAI;IACL,CALH,WAMS,YAAM;MACXA,IAAI,CAAC;QAAE3B,IAAI,EAAE;MAAR,CAAD,CAAJ;IACD,CARH;EASD;AAjEY,CAAf","names":["EventCard","EventService","watchEffect","name","props","page","type","Number","required","morepage","components","data","events","totalEvents","created","getEvents","then","response","headers","error","console","log","computed","hasNextPage","totalPages","Math","ceil","beforeRouteEnter","routeTo","routeFrom","next","parseInt","query","comp","beforeRouteUpdate"],"sourceRoot":"","sources":["/Users/tanachok/Desktop/conBo/lab5 q 5.5/lab0004q5/src/views/EventListView.vue"],"sourcesContent":["<template>\n  <h1>Events For Good</h1>\n  <div class=\"events\">\n    <EventCard\n      v-for=\"event in events\"\n      :key=\"event.id\"\n      :event=\"event\"\n    ></EventCard>\n    <div class=\"pagination\">\n      <router-link\n        id=\"page-prev\"\n        :to=\"{ name: 'EventList', query: { page: page - 1 } }\"\n        rel=\"prev\"\n        v-if=\"page != 1\"\n      >\n        Prev Page</router-link\n      >\n\n      <router-link\n        id=\"page-next\"\n        :to=\"{ name: 'EventList', query: { page: page + 1 } }\"\n        rel=\"next\"\n        v-if=\"hasNextPage\"\n      >\n        Next Page</router-link\n      >\n    </div>\n    <router-link :to=\"{ name: 'EventList', query: { morepage: morepage + 1 } }\">\n      Add data</router-link\n    >\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport EventCard from \"@/components/EventCard.vue\";\nimport EventService from \"@/services/EventService.js\";\nimport { watchEffect } from \"@vue/runtime-core\";\nexport default {\n  name: \"EventListView\",\n  props: {\n    page: {\n      type: Number,\n      required: true,\n    },\n    morepage: {\n      type: Number,\n      required: true,\n    },\n  },\n  components: {\n    EventCard,\n  },\n  data() {\n    return {\n      events: null,\n      totalEvents: 0, // <--- Added this to store totalEvents\n    };\n  },\n  created() {\n    watchEffect(() => {\n      EventService.getEvents(this.morepage, this.page)\n        .then((response) => {\n          this.events = response.data;\n          this.totalEvents = response.headers[\"x-total-count\"]; // <--- Store it\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    });\n  },\n  computed: {\n    hasNextPage() {\n      //First, calculate total pages\n      let totalPages = Math.ceil(this.totalEvents / 2); // 2 is events per pages.\n\n      //Then check to see if the current page is less than the total pages.\n      return this.page < totalPages;\n    },\n  },\n  /* eslint-disable-next-line no-unused-vars */\n  beforeRouteEnter(routeTo, routeFrom, next) {\n    EventService.getEvents(3, parseInt(routeTo.query.page) || 1)\n      .then((response) => {\n        next((comp) => {\n          comp.events = response.data;\n          comp.totalEvents = response.headers[\"x-total-count\"];\n        });\n      })\n      .catch(() => {\n        next({ name: \"NetworkError\" });\n      });\n  },\n  beforeRouteUpdate(routeTo, routeFrom, next) {\n    EventService.getEvents(3, parseInt(routeTo.query.page) || 1)\n      .then((response) => {\n        this.events = response.data;\n        this.totalEvents = response.headers[\"x-total-count\"];\n        next();\n      })\n      .catch(() => {\n        next({ name: \"NetworkError\" });\n      });\n  },\n};\n</script>\n<style scoped>\n.events {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pagination {\n  display: flex;\n  width: 290px;\n}\n.pagination a {\n  flex: 1;\n  text-decoration: none;\n  color: #2c3e50;\n}\n\n#page-prev {\n  text-align: left;\n}\n\n#page-next {\n  text-align: right;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}